"""Initial migration with all models

Revision ID: fb78baec4676
Revises: 
Create Date: 2025-04-26 21:11:43.885476

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Float, String, inspect, text

# revision identifiers, used by Alembic.
revision = 'fb78baec4676'
down_revision = None
branch_labels = None
depends_on = None


def table_exists(table_name):
    """检查表是否已存在"""
    bind = op.get_bind()
    inspector = inspect(bind)
    return table_name in inspector.get_table_names()


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if not table_exists('tags'):
        op.create_table('tags',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=True),
        sa.Column('category', sa.String(length=50), nullable=True),
        sa.Column('is_system', sa.Boolean(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('display_order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_tags_category'), 'tags', ['category'], unique=False)
        op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
        op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)

    if not table_exists('users'):
        op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=True),
        sa.Column('hashed_password', sa.String(length=100), nullable=False),
        sa.Column('nickname', sa.String(length=50), nullable=True),
        sa.Column('avatar_url', sa.String(length=255), nullable=True),
        sa.Column('gender', sa.Integer(), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('is_admin', sa.Boolean(), nullable=True),
        sa.Column('style_preference', sa.JSON(), nullable=True),
        sa.Column('color_preference', sa.JSON(), nullable=True),
        sa.Column('season_preference', sa.JSON(), nullable=True),
        sa.Column('last_login_at', sa.DateTime(), nullable=True),
        sa.Column('login_count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
        op.create_index(op.f('ix_users_nickname'), 'users', ['nickname'], unique=False)
        op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    if not table_exists('clothes'):
        op.create_table('clothes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('category', sa.String(length=50), nullable=True),
        sa.Column('sub_category', sa.String(length=50), nullable=True),
        sa.Column('color', sa.String(length=50), nullable=True),
        sa.Column('pattern', sa.String(length=50), nullable=True),
        sa.Column('material', sa.String(length=50), nullable=True),
        sa.Column('season', sa.String(length=50), nullable=True),
        sa.Column('occasion', sa.String(length=50), nullable=True),
        sa.Column('brand', sa.String(length=100), nullable=True),
        # 使用JSON类型替代PostgreSQL的ARRAY类型，与SQLite兼容
        sa.Column('ai_features', sa.JSON(), nullable=True),
        sa.Column('ai_tags', sa.JSON(), nullable=True),
        sa.Column('ai_category_confidence', sa.Float(), nullable=True),
        sa.Column('is_ai_categorized', sa.Boolean(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('is_favorite', sa.Boolean(), nullable=True),
        sa.Column('wear_count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_clothes_brand'), 'clothes', ['brand'], unique=False)
        op.create_index(op.f('ix_clothes_category'), 'clothes', ['category'], unique=False)
        op.create_index(op.f('ix_clothes_color'), 'clothes', ['color'], unique=False)
        op.create_index(op.f('ix_clothes_id'), 'clothes', ['id'], unique=False)
        op.create_index(op.f('ix_clothes_material'), 'clothes', ['material'], unique=False)
        op.create_index(op.f('ix_clothes_name'), 'clothes', ['name'], unique=False)
        op.create_index(op.f('ix_clothes_occasion'), 'clothes', ['occasion'], unique=False)
        op.create_index(op.f('ix_clothes_pattern'), 'clothes', ['pattern'], unique=False)
        op.create_index(op.f('ix_clothes_season'), 'clothes', ['season'], unique=False)
        op.create_index(op.f('ix_clothes_sub_category'), 'clothes', ['sub_category'], unique=False)
        op.create_index(op.f('ix_clothes_user_id'), 'clothes', ['user_id'], unique=False)

    if not table_exists('outfits'):
        op.create_table('outfits',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('occasion', sa.String(length=50), nullable=True),
        sa.Column('style', sa.String(length=50), nullable=True),
        sa.Column('season', sa.String(length=50), nullable=True),
        sa.Column('weather', sa.String(length=50), nullable=True),
        sa.Column('ai_suggestions', sa.JSON(), nullable=True),
        sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
        sa.Column('ai_score', sa.Float(), nullable=True),
        sa.Column('is_favorite', sa.Boolean(), nullable=True),
        sa.Column('wear_count', sa.Integer(), nullable=True),
        sa.Column('last_worn_date', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_outfits_id'), 'outfits', ['id'], unique=False)
        op.create_index(op.f('ix_outfits_name'), 'outfits', ['name'], unique=False)
        op.create_index(op.f('ix_outfits_occasion'), 'outfits', ['occasion'], unique=False)
        op.create_index(op.f('ix_outfits_season'), 'outfits', ['season'], unique=False)
        op.create_index(op.f('ix_outfits_style'), 'outfits', ['style'], unique=False)
        op.create_index(op.f('ix_outfits_user_id'), 'outfits', ['user_id'], unique=False)
        op.create_index(op.f('ix_outfits_weather'), 'outfits', ['weather'], unique=False)

    if not table_exists('clothes_images'):
        op.create_table('clothes_images',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('clothes_id', sa.Integer(), nullable=True),
        sa.Column('image_url', sa.String(length=255), nullable=True),
        sa.Column('is_primary', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['clothes_id'], ['clothes.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_clothes_images_clothes_id'), 'clothes_images', ['clothes_id'], unique=False)
        op.create_index(op.f('ix_clothes_images_id'), 'clothes_images', ['id'], unique=False)

    if not table_exists('clothes_tags'):
        op.create_table('clothes_tags',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('clothes_id', sa.Integer(), nullable=True),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
        sa.Column('confidence', sa.Float(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['clothes_id'], ['clothes.id'], ),
        sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_clothes_tags_clothes_id'), 'clothes_tags', ['clothes_id'], unique=False)
        op.create_index(op.f('ix_clothes_tags_id'), 'clothes_tags', ['id'], unique=False)
        op.create_index(op.f('ix_clothes_tags_tag_id'), 'clothes_tags', ['tag_id'], unique=False)

    if not table_exists('outfit_items'):
        op.create_table('outfit_items',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('outfit_id', sa.Integer(), nullable=True),
        sa.Column('clothes_id', sa.Integer(), nullable=True),
        sa.Column('position', sa.Integer(), nullable=True),
        sa.Column('layer', sa.Integer(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('styling_tips', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['clothes_id'], ['clothes.id'], ),
        sa.ForeignKeyConstraint(['outfit_id'], ['outfits.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_outfit_items_clothes_id'), 'outfit_items', ['clothes_id'], unique=False)
        op.create_index(op.f('ix_outfit_items_id'), 'outfit_items', ['id'], unique=False)
        op.create_index(op.f('ix_outfit_items_outfit_id'), 'outfit_items', ['outfit_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_outfit_items_outfit_id'), table_name='outfit_items')
    op.drop_index(op.f('ix_outfit_items_id'), table_name='outfit_items')
    op.drop_index(op.f('ix_outfit_items_clothes_id'), table_name='outfit_items')
    op.drop_table('outfit_items')
    op.drop_index(op.f('ix_clothes_tags_tag_id'), table_name='clothes_tags')
    op.drop_index(op.f('ix_clothes_tags_id'), table_name='clothes_tags')
    op.drop_index(op.f('ix_clothes_tags_clothes_id'), table_name='clothes_tags')
    op.drop_table('clothes_tags')
    op.drop_index(op.f('ix_clothes_images_id'), table_name='clothes_images')
    op.drop_index(op.f('ix_clothes_images_clothes_id'), table_name='clothes_images')
    op.drop_table('clothes_images')
    op.drop_index(op.f('ix_outfits_weather'), table_name='outfits')
    op.drop_index(op.f('ix_outfits_user_id'), table_name='outfits')
    op.drop_index(op.f('ix_outfits_style'), table_name='outfits')
    op.drop_index(op.f('ix_outfits_season'), table_name='outfits')
    op.drop_index(op.f('ix_outfits_occasion'), table_name='outfits')
    op.drop_index(op.f('ix_outfits_name'), table_name='outfits')
    op.drop_index(op.f('ix_outfits_id'), table_name='outfits')
    op.drop_table('outfits')
    op.drop_index(op.f('ix_clothes_user_id'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_sub_category'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_season'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_pattern'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_occasion'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_name'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_material'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_id'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_color'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_category'), table_name='clothes')
    op.drop_index(op.f('ix_clothes_brand'), table_name='clothes')
    op.drop_table('clothes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_nickname'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_index(op.f('ix_tags_category'), table_name='tags')
    op.drop_table('tags')
    # ### end Alembic commands ### 