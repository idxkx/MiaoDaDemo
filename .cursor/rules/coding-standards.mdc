---
description: 项目代码开发的关键规范和约定
globs: 
alwaysApply: false
---
{
  "type": "agent_requested",
  "title": "代码开发规范",
  "description": "本文档定义了项目的代码开发规范、编码风格指南和最佳实践，确保代码质量和一致性。",
  "version": "1.0.0",
  "author": "MiaoDao Team",
  "categories": [
    "development",
    "coding",
    "standards"
  ],
  "tags": [
    "python",
    "javascript",
    "typescript",
    "style-guide",
    "best-practices"
  ],
  "scope": {
    "includes": [
      "**/*.py",
      "**/*.js",
      "**/*.ts",
      "**/*.jsx",
      "**/*.tsx"
    ],
    "excludes": [
      "node_modules/**",
      "**/__pycache__/**",
      "dist/**",
      "build/**"
    ]
  },
  "priority": "high",
  "lastUpdated": "2024-03-13"
}

<!-- Coding Standards -->

<!-- Standards and guidelines for code development -->

# 编码规范与开发标准

## 核心原则

- **后端 (Python)**: 遵循 PEP 8，使用 Black 格式化
- **一致性**: 遵循项目内现有模式

## 命名约定

- **Python**: `snake_case` 变量/函数, `PascalCase` 类
- **数据库**: 表名复数、字段名单数，均使用 `snake_case`

## 简化后的开发约定

- **测试**: 后端单元测试简化为关键流程测试
- **提交**: 使用 `类型(范围): 描述` 格式，如 `feat(api): add user endpoint`
- **文档**: 公共函数需 Docstrings，API 变更需更新文档

## 简化认证系统

- 使用基本的用户名/密码认证
- JWT令牌用于API认证
- 移除微信相关依赖

## 参考文档

- API设计原则: [api-design-principles.mdc](mdc:.cursor/rules/api-design-principles.mdc)
- 项目结构: [project-structure.mdc](mdc:.cursor/rules/project-structure.mdc)
- 详细指南: [README.md](mdc:README.md)
