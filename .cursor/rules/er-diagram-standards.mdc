---
description: 确保实体关系图表的设计与实现的一致性和可用性
globs: 
alwaysApply: false
---
{
  "type": "agent_requested",
  "title": "ER图表设计规范",
  "description": "本文档定义了项目中实体关系图(ER Diagram)的设计标准、视觉规范、功能要求和技术实现规范，确保ER图表的一致性、可用性和可维护性。",
  "version": "1.0.0",
  "author": "MiaoDao Team",
  "categories": [
    "design",
    "database",
    "visualization"
  ],
  "tags": [
    "er-diagram",
    "database-design",
    "ui-components",
    "visualization",
    "interaction"
  ],
  "scope": {
    "includes": [
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx",
      "*.css",
      "*.sql"
    ],
    "excludes": [
      "node_modules/**",
      "dist/**",
      "build/**"
    ]
  },
  "priority": "high",
  "lastUpdated": "2024-03-13"
}

<!-- ER Diagram Standards -->

<!-- Core standards for entity relationship diagrams -->

# ER图表核心规范

## 1. 核心目标

- **看懂表关系**: 能清楚地看到哪些表是通过外键相互连接的。
- **看懂表内容**: 能清楚地看到每个表里有哪些字段（列），这些字段叫什么名字、是什么类型（比如数字、文字），以及哪个是主键（唯一标识符）、哪个是外键（指向其他表的链接）。

## 2. 视觉规范 (怎么看)

### 2.1 表 (实体)
- 每个数据库表用一个框框（矩形）表示。
- 框框顶上写表的名字（可以显示中文或英文）。
- 框框里面列出这个表的所有字段。

### 2.2 字段 (列)
- 一行写一个字段。
- 写清楚字段的名字（可以显示中文或英文）。
- 写清楚字段的类型（比如 `int` 代表数字, `varchar` 代表文字）。
- 用特殊符号标出哪个是主键 (PK 或 🔑)。
- 用特殊符号标出哪个是外键 (FK 或 🔗)。

### 2.3 关系 (连接线)
- 用带箭头的线把有关联的表连起来。
- 线通常从外键指向它关联的主键所在的表。
- 线要画清楚，别和别的东西混在一起。

### 2.4 颜色与样式 (建议)
- 用简单的颜色区分表和线，看着舒服就行。
- 字段信息最好用对齐的字体（比如等宽字体）。

## 3. 核心功能 (必须有)

### 3.1 中英文切换
- **必须** 有一个按钮或者选项，可以让你选择看中文名字还是英文名字。
- 这个切换对表名和字段名都有效。

## 4. 功能规范

### 4.1 必要功能
- 表格/简易模式切换
- 中英文名称切换
- 多种布局算法选择
- 视图缩放与适应
- 实体详情查看
- 悬停提示

### 4.2 交互行为
- 点击实体：显示详情面板
- 点击背景：隐藏详情面板
- 点击表格模式按钮：切换表格/简易模式
- 勾选中文名称：切换中/英文显示
- 拖拽实体：自定义位置，关系线自动跟随

## 5. 技术规范

### 5.1 数据结构
- 实体数据必须包含：id, name, chineseName(可选), fields
- 字段数据必须包含：name, type, pk(主键标识), fk(外键标识), fk_ref(外键引用)
- 关系数据必须包含：source, target, label

### 5.2 性能要求
- 初始化时间：不超过3秒
- 布局切换时间：不超过1秒
- 支持实体数量：不少于50个
- 滚动和缩放操作：不卡顿

## 6. 维护与扩展

### 6.1 代码规范
- 采用模块化设计，分离UI、数据和交互逻辑
- 必要的注释说明，特别是复杂算法或自定义功能
- 函数命名规范：动词+名词，如toggleTableMode

### 6.2 扩展接口
- 预留自定义样式接口
- 支持导出/导入布局配置
- 考虑未来添加字段筛选、搜索功能的扩展点

## 7. 示例

### 7.1 表格模式展示
表格模式应类似于下面的示例结构：
```
┌────────────────┐
│ 表名 (中文名)  │ <- 蓝色表头
├────────────────┤
│ 🔑 id: int     │
│ 🔗 user_id: int│ <- 浅蓝色表体
│    name: string│
└────────────────┘
```

### 7.2 简易模式展示
简易模式下仅显示实体名称，作为节点：
```
┌────────┐
│  表名  │
└────────┘
``` 