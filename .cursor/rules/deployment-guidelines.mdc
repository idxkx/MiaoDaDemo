---
description: 
globs: 
alwaysApply: false
---
{
  "type": "agent_requested",
  "title": "部署与环境配置指南",
  "description": "项目部署与环境配置的关键规范和约定"
}

# 部署与环境配置指南

## 开发环境设置

- **本地优先**: 在本地环境完成功能开发和测试
- **简化优先**: 使用最简单的配置开始开发
- **灵活部署**: 支持多种数据库和缓存选项

## 数据库选项

1. **SQLite** (开发推荐)
   - 零配置，文件数据库
   - 适合本地快速开发和测试
   - 连接字符串: `sqlite:///app.db`

2. **PostgreSQL** (可选)
   - 通过Docker: `docker-compose up -d db`
   - 本地安装: 自行安装PostgreSQL
   - 生产环境首选

## 缓存选项

1. **内存缓存** (开发推荐)
   - 零配置，使用Python内置字典
   - 适合本地快速开发和测试
   
2. **文件缓存** (简单替代)
   - 使用硬盘文件作为缓存存储
   - 简单但持久化

3. **Redis** (可选)
   - 通过Docker: `docker-compose up -d redis`
   - 本地安装: 自行安装Redis
   - 生产环境首选

## 环境配置

- **配置文件**: 使用 `.env` 文件管理环境变量（不提交到Git）
- **关键变量**: 
  - `DATABASE_URL`: 数据库连接字符串 
  - `CACHE_TYPE`: 缓存类型 (memory/file/redis)
  - `SECRET_KEY`: FastAPI 应用密钥
  - `ACTIVE_CLOTHING_MODEL`: 当前使用的模型目录名（默认：MD_resnet50_40_32_10e4_clothes_model）
  - `DEEPSEEK_API_KEY`: DeepSeek API密钥

## 本地开发架构

- **前端**: 微信小程序（本地开发工具）
- **后端服务**: FastAPI (本地运行，Python 3.12+)
- **数据库**: SQLite（简单）/ PostgreSQL（可选）
- **缓存**: 内存缓存（简单）/ Redis（可选）
- **服装识别**: 本地模型调用
- **存储**: 本地文件存储

## 本地开发流程

1. **最简设置**:
   - 创建`.env`文件配置SQLite和内存缓存
   - 运行后端: `uvicorn backend.main:app --reload`
   - 启动微信开发者工具

2. **Docker设置** (可选):
   - 安装Docker和Docker Compose
   - 启动容器: `docker-compose up -d db redis`
   - 配置`.env`使用PostgreSQL和Redis
   - 运行后端: `uvicorn backend.main:app --reload`

3. **生产部署** (未来计划):
   - 构建镜像: `docker-compose build`
   - 启动服务: `docker-compose up -d`
   - 配置Nginx反向代理

## 参考文档

- Docker配置: [docker-compose.yml](mdc:docker-compose.yml)
- 开发计划: [development_plan.md](mdc:development_plan.md)
- 快速开始: [README.md](mdc:README.md)
