---
description:
globs:
alwaysApply: false
---
# 项目结构与目录规范

## 目录结构
项目分为三个主要部分：

- `backend/` - 后端API服务（Python/FastAPI）
- `frontend/` - 微信小程序前端
- `models/` - AI模型相关代码

主要入口文件：
- 后端主入口：[backend/main.py](mdc:backend/main.py)
- 小程序主入口：[frontend/app.js](mdc:frontend/app.js)

## 重要约定

1. **后端代码组织**
   - API接口定义必须在 `backend/app/api/v1/` 目录下
   - 数据模型定义必须在 `backend/app/models/` 目录下
   - 业务逻辑必须在 `backend/app/services/` 目录下
   - 工具函数必须在 `backend/app/utils/` 目录下

2. **前端代码组织**
   - 页面组件必须在 `frontend/pages/` 目录下
   - 通用组件必须在 `frontend/components/` 目录下
   - 工具函数必须在 `frontend/utils/` 目录下
   - 静态资源必须在 `frontend/static/` 目录下

3. **AI模型代码组织**
   - 服装识别模型相关代码必须在 `models/clothing_recognition/` 目录下
   - 图像生成模型相关代码必须在 `models/image_generation/` 目录下

## 文件命名规范

1. **后端文件命名**
   - Python文件名使用下划线命名法（snake_case）
   - 模块名应使用单数形式（例如 `user.py` 而非 `users.py`）

2. **前端文件命名**
   - 页面目录使用短横线命名法（kebab-case）
   - 组件目录使用短横线命名法（kebab-case）
   - JavaScript文件和WXSS文件与其目录同名

## 重要文件引用
- 数据库模型设计：[project_structure.md](mdc:project_structure.md)
- API接口设计：[project_structure.md](mdc:project_structure.md)
- 用户流程设计：[user_flow.md](mdc:user_flow.md)
- 前端界面设计：[frontend_design.md](mdc:frontend_design.md)
